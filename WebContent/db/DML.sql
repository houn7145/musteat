--------------------------------
----------------- MEMBER
--------------------------------
-- 1. 회원가입
INSERT INTO MEMBER (MID, MPW, MNAME, MEMAIL, MTEL, MBIRTH)
    VALUES ('EEE', '1', '이길동', 'E@E.COM', '010-1111-1111', '1995-12-12');
    
-- 2. ID중복체크
SELECT * FROM MEMBER WHERE MID = 'AAA';

-- 3. EMAIL중복체크
SELECT * FROM MEMBER WHERE MEMAIL = 'H@H.COM';

-- 4. 로그인 체크
SELECT * FROM MEMBER WHERE MID = 'AAA' AND MPW = '1';

-- 5. ID로 회원정보 가져오기
SELECT * FROM MEMBER WHERE MID = 'AAA';
SELECT * FROM MEMBER;

-- 6. 회원정보 수정하기
UPDATE MEMBER SET MPW = '111',
                  MEMAIL = 'A@A.COM',
                  MTEL = '010-1111-1111',
                  MBIRTH = '1995-12-20'
    WHERE MID = 'AAA';
    
-- 7-1. 관리자모드에서 회원리스트 출력 - 페이징
SELECT * FROM (SELECT ROWNUM RN, A.* FROM (SELECT * FROM MEMBER ORDER BY MRDATE DESC) A)
    WHERE RN BETWEEN 2 AND 3;
    
-- 7-2. 페이징시 필요한 등록된 회원수
SELECT COUNT(*) FROM MEMBER;

-- 8. 회원 탈퇴
DELETE FROM MEMBER WHERE MID = 'DDD';

-- 9. 회원 탈퇴시 작성글 전부 삭제
DELETE FROM FREEBOARD WHERE MID = '1';
DELETE FROM RESTAURANT WHERE MID = '6';
DELETE FROM ONEREVIEW WHERE MID = '7';


-- * 내가 쓴 글 보기 (자유게시판) - 페이징 // 보류
SELECT * FROM (SELECT ROWNUM RN, A.* FROM (SELECT * FROM FREEBOARD WHERE MID = 'BBB' ORDER BY FRDATE DESC)A)
    WHERE RN BETWEEN 1 AND 2;


-- * 페이징시 필요한 등록한 글 갯수 (자유게시판) // 보류
SELECT COUNT(*) FROM FREEBOARD WHERE MID = 'BBB';

-- *. 내가 등록한 맛집 보기 - 페이징 // 보류
SELECT * FROM (SELECT ROWNUM RN, A.* FROM (SELECT * FROM RESTAURANT WHERE MID = 'BBB' ORDER BY RRDATE DESC)A)
    WHERE RN BETWEEN 1 AND 2;

-- *. 페이징시 필요한 등록한 맛집 갯수 // 보류
SELECT COUNT(*) FROM RESTAURANT;

--------------------------------
----------------- RESTAURANT
--------------------------------

-- 1-1. 맛집 리스트 보기 - 페이징 
SELECT * FROM (SELECT ROWNUM RN, A.* FROM (SELECT * FROM RESTAURANT ORDER BY RRDATE DESC)A)
    WHERE RN BETWEEN 1 AND 10;

-- 1-2. 페이징시 필요한 등록한 맛집 갯수
SELECT COUNT(*) FROM RESTAURANT;

-- 2. 맛집 등록
INSERT INTO RESTAURANT (RNO, MID, CNO, RPLACE, RNAME, RCONTENT, MAINIMG, RTEL, RMENU, RPRICE)
    VALUES (RES_SEQ.NEXTVAL, 'AAA', 1, '인천', '인천식당', '깔끔해요', 'IMAGE1', '02-111-1111', '제육볶음', '12000');

-- 3. 등록한 맛집 수정
UPDATE RESTAURANT SET CNO = 2,
                      RPLACE = '서울',
                      RNAME = '서울식당',
                      RCONTENT = '깨끗해요',
                      MAINIMG = 'IMAGE2',
                      RTEL = '02-123-1234',
                      RMENU = '순두부',
                      RPRICE = '10000'
    WHERE RNO = 1;

-- 4. 등록한 맛집 삭제
DELETE FROM RESTAURANT WHERE RNO = '1';

-- 5-1. 평점 등록
INSERT INTO RAVG (ANO, RNO, RATING)
    VALUES (RAVG_SEQ.NEXTVAL, '2', 5);

-- 5-2. 평점 등록 횟수 업데이트
UPDATE RESTAURANT SET AVGHIT = AVGHIT + 1
    WHERE RNO = '1';

-- 6. 평점 출력
SELECT * FROM RAVG;
SELECT * FROM RESTAURANT;

SELECT AVG(AVG) FROM RAVG WHERE RNO = '1';

-- 7. 맛집 클릭시 상세보기 
SELECT * FROM RESTAURANT WHERE RNO = '1';

SELECT R.*, C.CNAME, (SELECT AVG(RATING) FROM RAVG A WHERE A.RNO = R.RNO)RAVG FROM RESTAURANT R, CCODE C WHERE C.CNO = R.CNO AND RNO = '1';

-- 8. 조회수 업
UPDATE RESTAURANT SET RHIT = RHIT + 1
    WHERE RNO = '1';

-- * 5명 이상 평점을 등록한 맛집 중 평점이 4 이상인 맛집 출력
SELECT R.*, C.CNAME, (SELECT AVG(RATING) FROM RAVG A WHERE A.RNO = R.RNO)RAVG FROM RESTAURANT R, CCODE C WHERE C.CNO = R.CNO AND R.AVGHIT >= 5 ORDER BY RAVG DESC;

SELECT R.*, C.CNAME FROM RESTAURANT R, CCODE C WHERE C.CNO = R.CNO AND R.AVGHIT >= 5;

SELECT R.*, AVG(RATING) FROM RAVG A, RESTAURANT R WHERE A.RNO = R.RNO GROUP BY RESTAURANT;

SELECT R.*, AVG(RATING) FROM RAVG A, RESTAURANT R WHERE A.RNO = R.RNO;

SELECT RESTAURANT.*, C.CNAME, RAVG.RAVG FROM RESTAURANT, CCODE C, (SELECT R.RNAME, AVG(RATING)RAVG FROM RAVG, RESTAURANT R WHERE RAVG.RNO = R.RNO GROUP BY R.RNAME HAVING AVG(RATING) > 4)RAVG WHERE RESTAURANT.RNAME = RAVG.RNAME AND RESTAURANT.AVGHIT >= 5 AND RESTAURANT.CNO = C.CNO;

---
SELECT R.*, C.CNAME, (SELECT AVG(RATING) FROM RAVG A WHERE A.RNO = R.RNO)RAVG FROM RESTAURANT R, CCODE C WHERE C.CNO = R.CNO AND R.AVGHIT >= 5 ORDER BY RAVG DESC
-- 8. 맛집 지역으로 검색 

(SELECT R.RNAME, AVG(RATING) FROM RAVG, RESTAURANT R WHERE RAVG.RNO = R.RNO GROUP BY R.RNAME HAVING AVG(RATING) > 4.5);
SELECT * FROM(SELECT ROWNUM RN, A.* FROM (SELECT * FROM RESTAURANT WHERE RPLACE LIKE '%' || '인천' || '%')A)
    WHERE RN BETWEEN 1 AND 3;
    
SELECT * FROM (SELECT ROWNUM RN, A.* FROM (SELECT RESTAURANT.*, (SELECT ROUND(AVG(RATING),0) FROM RAVG WHERE RNO=RESTAURANT.RNO)RAVG FROM RESTAURANT WHERE RPLACE LIKE '%' || '구' || '%' ORDER BY RAVG) A)
 WHERE RN BETWEEN 1 AND 5;
 
SELECT COUNT(*) FROM RESTAURANT WHERE RPLACE LIKE '%' || '서울' || '%';
--------------------------------
----------------- OneReview
--------------------------------
SELECT * FROM RESTAURANT;

-- 1. 한줄평 등록
INSERT INTO ONEREVIEW (ONO, RNO, MID, OCONTENT, ORECOMMAND)
    VALUES (ONE_SEQ.NEXTVAL, '1', 'CCC', '좋아요', 2);

-- 2. 한줄평 삭제
DELETE FROM ONEREVIEW WHERE ONO = '4';

-- 3. 맛집 한줄평 출력
SELECT O.*, M.MNAME FROM ONEREVIEW O, MEMBER M WHERE O.MID = M.MID AND RNO = '1' ORDER BY ORECOMMAND DESC; 

-- 4. 좋아요 클릭
UPDATE ONEREVIEW SET ORECOMMAND = ORECOMMAND + 1
    WHERE ONO = '1';

-- 5. 싫어요 클릭
UPDATE ONEREVIEW SET ORECOMMAND = ORECOMMAND - 1
    WHERE ONO = '1';

SELECT * FROM ONEREVIEW;

SELECT ORECOMMAND FROM ONEREVIEW WHERE ONO = '1';
--------------------------------
----------------- ADMIN
--------------------------------

-- 1. ADMIN 로그인 체크
SELECT * FROM ADMIN WHERE AID = 'ADMIN' AND APW = '1';

-- 2. 관리자 로그인 후 세션에 넣을 용도 (DTO 가져오기)
SELECT * FROM  ADMIN WHERE AID = 'ADMIN';

--------------------------------
----------------- NOTICEBOARD
--------------------------------

-- 1. 공지게시판 글 등록
INSERT INTO NOTICEBOARD (NNO, AID, NTITLE, NCONTENT)
    VALUES (NOTICE_SEQ.NEXTVAL, 'ADMIN', '공지1', '본문');

-- 2-1. 공지게시판 페이징
SELECT * FROM (SELECT ROWNUM RN, A.* FROM (SELECT N.*, A.ANAME FROM NOTICEBOARD N, ADMIN A WHERE N.AID = A.AID ORDER BY NRDATE DESC)A)
    WHERE RN BETWEEN 1 AND 2;

-- 2-2. 페이징시 필요한 등록한 공지글 수
SELECT COUNT(*) FROM NOTICEBOARD;

-- 3. 조회수 1 올리기 
UPDATE NOTICEBOARD SET NHIT = NHIT + 1
    WHERE NNO = '1';

-- 4. 글번호로 공지글 상세보기
SELECT N.*, A.ANAME FROM NOTICEBOARD N, ADMIN A WHERE N.AID = A.AID AND NNO = '1';

-- 5. 공지글 수정
UPDATE NOTICEBOARD SET NTITLE = '바뀐 제목',
                       NCONTENT = '바뀐 본문'
    WHERE NNO = '1';

-- 6. 공지글 삭제
DELETE FROM NOTICEBOARD WHERE NNO = '1';

-- 7. 공지게시판 검색
SELECT * FROM (SELECT ROWNUM RN, A.* FROM (SELECT N.*, A.ANAME FROM NOTICEBOARD N, ADMIN A WHERE N.AID = A.AID AND NTITLE LIKE '%' || '공지' || '%' ORDER BY NRDATE DESC)A)
    WHERE RN BETWEEN 1 AND 2;
    
SELECT * FROM NOTICEBOARD WHERE NTITLE LIKE '%' || '공지' || '%';

-- 8. 공지게시판 검색 페이징시 필요한 글 갯수

SELECT COUNT(*) FROM NOTICEBOARD WHERE NTITLE LIKE '%' || '공지' || '%';

--------------------------------
----------------- FREEBOARD
--------------------------------
-- 1. 자유게시판 글 등록(원글)
INSERT INTO FREEBOARD (FNO, MID, FTITLE, FCONTENT, FIMAGE1, FIMAGE2, FGROUP, FSTEP, FINDENT)
    VALUES (FREE_SEQ.NEXTVAL, 'CCC', '포근한 날씨네요', '따뜻해요', NULL, NULL, FREE_SEQ.CURRVAL, 0, 0);

-- 2-1. 자유게시판 페이징
SELECT * FROM (SELECT ROWNUM RN, A.* FROM (SELECT M.MNAME, F.* FROM FREEBOARD F, MEMBER M WHERE M.MID = F.MID ORDER BY FGROUP DESC, FSTEP)A)
    WHERE RN BETWEEN 1 AND 10;
    
SELECT M.MNAME, F.* FROM FREEBOARD F, MEMBER M WHERE M.MID = F.MID;
SELECT * FROM MEMBER;

-- 2-2. 페이징시 필요한 자유게시판 글목록
SELECT COUNT (*) FROM FREEBOARD;

-- 3. 조회수 1 올리기
UPDATE FREEBOARD SET FHIT = FHIT + 1
    WHERE FNO = '1';

-- 4. 자유게시판 글 상세보기
SELECT F.*, M.MNAME FROM FREEBOARD F, MEMBER M WHERE FNO = '10' AND F.MID = M.MID;

-- 5. 자유게시판 글 수정
UPDATE FREEBOARD SET FTITLE = '수정된 제목',
                     FCONTENT = '수정된 본문',
                     FIMAGE1 = '사진1',
                     FIMAGE2 = '사진2'
    WHERE FNO = '1';

-- 6. 자유게시판 글 삭제
DELETE FROM FREEBOARD WHERE FNO = '6';

DELETE FROM FREEBOARD WHERE FGROUP = ? AND (FSTEP>=? AND FSTEP<(select NVL(MIN(FSTEP),9999) FROM FREEBOARD WHERE FGROUP=? AND FSTEP>? AND FINDENT<=?));

UPDATE FREEBOARD SET fSTEP = fSTEP-? WHERE fGROUP=? AND fSTEP>?;
    
-- 7-1. 답변글 달기 선행답변글 쓰기 선행 단계(원글의 fgroup과 같고 원글의 fstep보다 크면 fstep을 1 증가)
UPDATE FREEBOARD SET FSTEP = FSTEP + 1
    WHERE FGROUP = 2 AND FSTEP > 0;

-- 7-2. 답변글 등록
INSERT INTO FREEBOARD (FNO, MID, FTITLE, FCONTENT, FIMAGE1, FIMAGE2, FGROUP, FSTEP, FINDENT)
    VALUES (FREE_SEQ.NEXTVAL, 'CCC', '서구청 닭갈비 맛있어요', '한번가보세요', NULL, NULL, 2, 1, 1);

-- 8. 자유게시판 글 검색
SELECT COUNT(*) FROM FREEBOARD WHERE FTITLE LIKE '%' || '인' || '%';

SELECT * FROM (SELECT ROWNUM RN, A.* FROM (SELECT M.MNAME, F.* FROM FREEBOARD F, MEMBER M WHERE M.MID = F.MID AND F.FTITLE LIKE '%' || '제' || '%' ORDER BY FGROUP DESC, FSTEP)A) WHERE RN BETWEEN 1 AND 5;


--------------------------------
----------------- ccode
--------------------------------

-- 1. 카테고리 별 맛집 출력(평점도 같이 출력) 
SELECT * FROM (SELECT ROWNUM RN, A.* FROM (SELECT R.*, C.CNAME, (SELECT AVG(RATING) FROM RAVG A WHERE A.RNO = R.RNO)RAVG FROM RESTAURANT R, CCODE C WHERE C.CNO = '1' AND C.CNO = R.CNO ORDER BY RAVG) A)
 WHERE RN BETWEEN 1 AND 5;

SELECT * FROM (SELECT ROWNUM RN, A.* FROM (SELECT RESTAURANT.*, (SELECT AVG(RATING) FROM RAVG WHERE RNO=RESTAURANT.RNO)RAVG FROM RESTAURANT WHERE CNO = 1 ORDER BY RAVG) A) WHERE RN BETWEEN 1 AND 5;

SELECT RESTAURANT.*, (SELECT AVG(RATING) FROM RAVG WHERE RNO = RESTAURANT.RNO)RAVG FROM RESTAURANT WHERE CNO = '1' ORDER BY RAVG;

-- 2. 카테고리 별 맛집 출력
SELECT * FROM (SELECT ROWNUM RN, A.* FROM (SELECT * FROM RESTAURANT WHERE CNO = 1 ORDER BY RRDATE DESC)A)
    WHERE RN BETWEEN 1 AND 2;

SELECT R.*, (SELECT R.RNAME, AVG(RATING) FROM RAVG, RESTAURANT R WHERE RAVG.RNO = R.RNO GROUP BY R.RNAME HAVING AVG(RATING) > 4.5) FROM RESTARANT ;
    
-- 3. 카테고리 별 맛집 출력시 필요한 맛집 갯수
SELECT COUNT(*) FROM RESTAURANT WHERE CNO = 1;

COMMIT;

SELECT * FROM MEMBER;